buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.3.RELEASE'
        springCloudConnectorsVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'io.pivotal.pal'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0")
    compile("org.springframework.cloud:spring-cloud-spring-service-connector:${springCloudConnectorsVersion}")
    compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector:${springCloudConnectorsVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

test.environment([
        "SPRING_PROFILES_ACTIVE": "cloud",
        "VCAP_APPLICATION": "some long json object that contains app metadata.",
        "VCAP_SERVICES": "{\"user-provided\": [{\"credentials\": {\"password\": \"pa55woRD\",\"url\": \"http://example.com\",\"username\": \"admin\"},\"label\": \"user-provided\",\"name\": \"my-service\",\"syslog_drain_url\": \"\",\"tags\": [],\"volume_mounts\": []},{\"credentials\": {\"password\": \"bar\",\"url\": \"http://example.com\",\"username\": \"foo\"},\"label\": \"user-provided\",\"name\": \"another-service\",\"syslog_drain_url\": \"\",\"tags\": [],\"volume_mounts\": []}]}",
])
